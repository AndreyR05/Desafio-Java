#  Desafio Java ğŸ’«

Monitoramento de Recursos do Sistema -- CiÃªncia da ComputaÃ§Ã£o

ğŸ’» Andrey Rodrigues (02231051)
ğŸ’» Paulo Reis de Marcena (02231033)

### Objetivos
Desenvolver um aplicativo Java para monitoramento de recursos do sistema, seguindo os princÃ­pios SOLID e utilizando a biblioteca Looca.

### Requisitos

Biblioteca Looca: Utilizar a biblioteca Looca para acessar dados do sistema.

AbstraÃ§Ãµes e Interfaces: Empregar Classes Abstratas e Interfaces para estruturar o cÃ³digo.

DAO (Data Access Object): Implementar o padrÃ£o DAO para a persistÃªncia de dados de cada entidade do sistema.

Captura de Dados com TimerTask: Implementar rotinas para capturar dados periodicamente usando TimerTask.

Tabela de ParametrizaÃ§Ã£o: Criar uma tabela para parametrizar os componentes do sistema, incluindo CPU, MemÃ³ria e Disco.

Uso de Mapper: Implementar a interface RowMapper para todas as consultas ao banco de dados.

Nomenclatura: Escolher bons nomes para variÃ¡veis, parÃ¢metros, mÃ©todos e classes.

PrincÃ­pio 'S' do SOLID: Assegurar-se de que cada classe tenha uma Ãºnica responsabilidade.

PrincÃ­pio 'I' do SOLID: Evitar dependÃªncias desnecessÃ¡rias entre classes.

OrganizaÃ§Ã£o de Pacotes: Separar os pacotes de acordo com o contexto, como database, dao, domÃ­nio, serviÃ§os, integraÃ§Ã£o etc.

UtilizaÃ§Ã£o de Enumeradores: Utilizar ao menos um enumerador no projeto para lidar com valores padrÃµes.

## Bibliotecas Utilizadas

### API Looca:
Principal funÃ§Ã£o Ã© capturar dados dos componentes de mÃ¡quina via Java.

### JDBC e MySQL:
ResponsÃ¡veis por realizar a conexÃ£o entre o projeto e o banco de dados.

## Estrutura do Projeto

ğŸ“‚ Database: ContÃ©m tudo referente ao banco de dados, incluindo o diretÃ³rio DAO (comandos, conexÃ£o e script do banco).
ğŸ“‚ Model: Classes dos componentes, mÃ©tricas e servidores.
ğŸ“‚ Terminal: Classe com prints de interaÃ§Ã£o com o usuÃ¡rio.

ğŸ“‚Utils:
  Enum: Armazena enumerados.
  Interfaces: ContÃ©m interfaces.
  Looca: Abstrai funÃ§Ãµes de monitoramento da API Looca.
  Mapper: Transforma registros do banco em objetos.

## ExecuÃ§Ã£o da AplicaÃ§Ã£o:

1Â° Configure o ambiente local e execute o script do banco de dados no MySQL Workbench.
2Â° Configure a conexÃ£o na classe DataBaseConnection, tomando cuidado com as credenciais.
3Â° VÃ¡ para a classe Main e execute o aplicativo.

Nota: Cuidado com informaÃ§Ãµes sensÃ­veis ao fazer push no repositÃ³rio.